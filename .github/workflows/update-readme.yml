name: Update README (latest repos)

on:
  schedule:
    - cron: "0 */6 * * *" # every 6 hours
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write # allow committing README changes
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build latest repos section
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const username = 'surajgariya00';

            // 1) Fetch repos
            const { data: repos } = await github.rest.repos.listForUser({
              username,
              sort: 'updated',
              direction: 'desc',
              per_page: 100,
            });

            // 2) Build list (skip forks/archived)
            const items = repos
              .filter(r => !r.fork && !r.archived)
              .slice(0, 6)
              .map(r => {
                const lang = r.language ?? '—';
                const desc = (r.description ?? '').replace(/\r?\n/g, ' ').trim();
                return `- [${r.name}](${r.html_url}) — ${desc || 'No description'} _(${lang})_ ⭐ ${r.stargazers_count}`;
              });

            // 3) Replace block in README
            const fs = require('fs');
            const path = 'README.md';
            let readme = fs.readFileSync(path, 'utf8');

            const start = '<!-- LATEST_REPOS:start -->';
            const end   = '<!-- LATEST_REPOS:end -->';
            const block = `${start}\n${(items.length ? items.join('\n') : '- _No public repositories found_')}\n${end}`;
            const regex = new RegExp(`${start}[\\s\\S]*?${end}`);

            if (!regex.test(readme)) {
              core.setFailed('Markers not found in README.md. Make sure the README contains:\n' + start + '\n' + end);
            } else {
              readme = readme.replace(regex, block);
              fs.writeFileSync(path, readme);
              core.notice('README updated.');
            }

      - name: Commit & push
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add README.md
            git commit -m "chore: update latest repos [skip ci]"
            git push
          else
            echo "No changes"
